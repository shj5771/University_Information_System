/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oop2.lecture;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 이민우
 */
public class Exchange_Lecture extends javax.swing.JFrame {
    String id; //사용자 아이디
    ArrayList<Course> lecList = new ArrayList<>(); //강의 배열
    LectureAdapter a; // Adapter에서 함수 사용을  위한 선언 
    String text = "euc-kr";
    /**
     * Creates new form Exchange_Lecture
     */
    public Exchange_Lecture() throws IOException  {
        initComponents();
        a = new LectureAdapter();
        lecture_list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        a.exChangeList(lecture_list); // 한번도 개설되지 않은 강좌 리스트 출력
        a.getLectureList(lecList);   // 개설 전 강의를 출력
    }
    
    
    public void setLecInfo() throws FileNotFoundException, UnsupportedEncodingException, IOException{ 
        //GUI화면에 선택한 정보 화면에 출력
        String str;
        String[] key = null;
        int comboIndex = 0;
        id = a.getKey(lecture_list);
        try (BufferedReader read = new BufferedReader(new InputStreamReader(new FileInputStream("insertlecturelist.txt"), text))) {
            while((str = read.readLine()) != null){
                if(str.contains(id)) //id값이 포함되어 있으면
                    key = str.split("/");
            }   switch(key[2]){ //콤보박스에 따라 정보 저장
                case "전산학과":
                    comboIndex = 0; break;
                case "전자공학과":
                    comboIndex = 1; break;
                case "화학공학과":
                    comboIndex = 2; break;
                case "기계공학과":
                    comboIndex = 3; break;
                case "항공우주공학과":
                    comboIndex = 4; break;
            }   
            lecture_num.setText(key[0]); //강의 번호 설정
            lecture_name.setText(key[1]);//강의 이름 설정
            depart_list.setSelectedIndex(comboIndex); //담당학과 설정
            getGrade.setText(key[3]); //학점 설정
            lecture_info.setText(key[4]); //강의설명 설정
            //파일 닫기
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        exchange = new javax.swing.JButton();
        goback = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lecture_info = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lecture_name = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        getGrade = new javax.swing.JTextField();
        lecture_num = new javax.swing.JTextField();
        depart_list = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        lecture_list = new javax.swing.JTable();
        delete = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("강의정보 수정");
        setPreferredSize(new java.awt.Dimension(703, 600));
        setSize(new java.awt.Dimension(703, 600));

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 0, 18)); // NOI18N
        jLabel1.setText("강의 정보 수정");

        exchange.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        exchange.setText("수정");
        exchange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exchangeActionPerformed(evt);
            }
        });

        goback.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        goback.setText("뒤로가기");
        goback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gobackActionPerformed(evt);
            }
        });

        jLabel7.setText("강좌 설명");

        jLabel3.setText("강좌 이름");

        jLabel4.setText("담당 학과");

        jLabel6.setText("학  점");

        jLabel5.setText("강좌 번호");

        lecture_num.setEditable(false);

        depart_list.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "전산학과", "전자공학과", "화학공학과", "기계공학과", "항공우주공학과" }));

        lecture_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "강좌 번호", "강좌 이름", "담당 학과", "학점", "강의 설명"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        lecture_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lecture_listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lecture_list);

        delete.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        delete.setText("삭제");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(exchange, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(goback, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel6))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lecture_num)
                                            .addComponent(lecture_name)
                                            .addComponent(getGrade)
                                            .addComponent(depart_list, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(40, 40, 40))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lecture_info, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(jLabel1)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lecture_num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(lecture_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(depart_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(getGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lecture_info, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exchange, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(goback, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exchangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exchangeActionPerformed
        // TODO add your handling code here:
        FileOutputStream file;
        String str;
        DefaultTableModel model = (DefaultTableModel) lecture_list.getModel();
        try {
            if(lecture_num.getText().isEmpty()){
                showMessageDialog(null, "강좌를 선택해 주세요");
             }else{
                file = new FileOutputStream("insertlecturelist.txt");
                BufferedWriter writer = new BufferedWriter(new OutputStreamWriter((file), text));
                for(int i = 0; i < lecList.size(); i++){//id이랑 일치하는 객체 정보 변경
                    if(lecList.get(i).getCourseNum().equals(id)){
                        lecList.get(i).setCourseName(lecture_name.getText());
                        lecList.get(i).setDepartment(depart_list.getSelectedItem().toString());
                        lecList.get(i).setGrade(getGrade.getText());
                        lecList.get(i).setCourse_content(lecture_info.getText());
                 }
                str = String.format("%s/%s/%s/%s/%s/%s%n", lecList.get(i).getCourseNum(),lecList.get(i).getCourseName(),lecList.get(i).getDepartment(), lecList.get(i).getGrade(),lecList.get(i).getCourse_content(),lecList.get(i).getOpen());
                writer.write(str);
                //변경 후 저장하거나 그대로 다시 파일에 저장
                }
                writer.close(); //파일 닫기
                model.setNumRows(0);//테이블 초기화
                a.exChangeList(lecture_list); //테이블 업데이트
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Exchange_Lecture.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Exchange_Lecture.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Exchange_Lecture.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exchangeActionPerformed

    //뒤로가기
    private void gobackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gobackActionPerformed
        // TODO add your handling code here:
        dispose();   
    }//GEN-LAST:event_gobackActionPerformed

    //삭제 버튼
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        String str;
        String key = null; 
        FileOutputStream file;   
        DefaultTableModel model = (DefaultTableModel) lecture_list.getModel();
         try {
     
             if(lecture_num.getText().isEmpty()){ //강좌를 선택 안했을 때
                showMessageDialog(null, "강좌를 선택해 주세요");
             }
             else{
                key = a.getKey(lecture_list); //테이블에서 선택된 키값가져오기
                a.getLectureList(lecList);//개설 전 강의 배열에 저장
                for(int i = 0; i<lecList.size(); i++){ // 삭제할 강좌를 리스트에서 삭제
                    if(key.equals(lecList.get(i).getCourseNum()))
                        lecList.remove(i);
                }
                //배열을 파일에 새로 쓰기
                file = new FileOutputStream("insertlecturelist.txt");
                BufferedWriter writer = new BufferedWriter(new OutputStreamWriter((file), text)); // 쓰기
                for(int i = 0; i< lecList.size();i++){ //리스트의 크기만큼 실행
                    str = String.format("%s/%s/%s/%s/%s/%s%n", lecList.get(i).getCourseNum(), lecList.get(i).getCourseName(), lecList.get(i).getDepartment(),lecList.get(i).getGrade(),lecList.get(i).getCourse_content(),lecList.get(i).getOpen());
                    //format을 이용하여 메모장에 저장할 내용 str에 저장  //강좌 번호, 강좌 이름, 당담학과, 학점, 강의 설명, 개설여부
                    writer.write(str);//메모장에 쓰기
                }
                writer.close(); //닫기
                model.setNumRows(0);
                a.exChangeList(lecture_list);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Exchange_Lecture.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Exchange_Lecture.class.getName()).log(Level.SEVERE, null, ex);
        }                            
    }//GEN-LAST:event_deleteActionPerformed

    //테이블에 있는 아이템 클릿 시
    private void lecture_listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lecture_listMouseClicked
        try {
            // TODO add your handling code here:
            setLecInfo();
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Exchange_Lecture.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Exchange_Lecture.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lecture_listMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> depart_list;
    private javax.swing.JButton exchange;
    private javax.swing.JTextField getGrade;
    private javax.swing.JButton goback;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lecture_info;
    private javax.swing.JTable lecture_list;
    private javax.swing.JTextField lecture_name;
    private javax.swing.JTextField lecture_num;
    // End of variables declaration//GEN-END:variables
}
